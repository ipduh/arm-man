<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->

<instructionsection id="brkn_p_p_pp" title="BRKN, BRKNS" type="instruction">
  <docvars>
    <docvar key="instr-class" value="sve" />
    <docvar key="isa" value="A64" />
  </docvars>
  <heading>BRKN, BRKNS</heading>
  <desc>
    <brief>Propagate break to next partition</brief>
    <description>
      <para>If the last active element of the first source predicate is false then set the destination predicate to all-false. Otherwise leaves the destination and second source predicate unchanged. Inactive elements in the destination predicate register are set to zero. Optionally sets the <arm-defined-word>First</arm-defined-word> (N), <arm-defined-word>None</arm-defined-word> (Z), <arm-defined-word>!Last</arm-defined-word> (C) condition flags based on the predicate result, and the V flag to zero.</para>
    </description>
    <status>Green</status>
    <predicated>True</predicated>
    <takes_movprfx>False</takes_movprfx>
    <takes_pred_movprfx>False</takes_pred_movprfx>
  </desc>
  <alias_list howmany="0"></alias_list>
  <classes>
    <classesintro count="2">
      <txt>It has encodings from 2 classes:</txt>
      <a href="#brkn_p_p_pp_">Not setting the condition flags</a>
      <txt> and </txt>
      <a href="#brkns_p_p_pp_">Setting the condition flags</a>
    </classesintro>
    <iclass name="Not setting the condition flags" oneof="2" id="brkn_p_p_pp_" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="cond-setting" value="no-s" />
        <docvar key="instr-class" value="sve" />
        <docvar key="isa" value="A64" />
        <docvar key="mnemonic" value="BRKN" />
      </docvars>
      <iclassintro count="1"></iclassintro>
      <regdiagram form="32" psname="BRKN-P.P.PP-_">
        <box hibit="31" width="9" settings="9">
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="22" name="S" settings="1">
          <c>0</c>
        </box>
        <box hibit="21" width="8" settings="8">
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="13" width="4" name="Pg" usename="1">
          <c colspan="4"></c>
        </box>
        <box hibit="9" settings="1">
          <c>0</c>
        </box>
        <box hibit="8" width="4" name="Pn" usename="1">
          <c colspan="4"></c>
        </box>
        <box hibit="4" settings="1">
          <c>0</c>
        </box>
        <box hibit="3" width="4" name="Pdm" usename="1">
          <c colspan="4"></c>
        </box>
      </regdiagram>
      <encoding name="brkn_p_p_pp_" oneofinclass="1" oneof="2" label="Not setting the condition flags">
        <docvars>
          <docvar key="cond-setting" value="no-s" />
          <docvar key="instr-class" value="sve" />
          <docvar key="isa" value="A64" />
          <docvar key="mnemonic" value="BRKN" />
        </docvars>
        <asmtemplate><text>BRKN    </text><a link="pdm" hover="Second source and destination scalable predicate register (field &quot;Pdm&quot;)">&lt;Pdm&gt;</a><text>.B, </text><a link="pg" hover="Governing scalable predicate register (field &quot;Pg&quot;)">&lt;Pg&gt;</a><text>/Z, </text><a link="pn" hover="First source scalable predicate register (field &quot;Pn&quot;)">&lt;Pn&gt;</a><text>.B, </text><a link="pdm" hover="Second source and destination scalable predicate register (field &quot;Pdm&quot;)">&lt;Pdm&gt;</a><text>.B</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="BRKN-P.P.PP-_" mylink="BRKN-P.P.PP-_" enclabels="" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !HaveSVE() then UNDEFINED;
integer g = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Pg);
integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Pn);
integer dm = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Pdm);
boolean setflags = FALSE;</pstext>
        </ps>
      </ps_section>
    </iclass>
    <iclass name="Setting the condition flags" oneof="2" id="brkns_p_p_pp_" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="cond-setting" value="s" />
        <docvar key="instr-class" value="sve" />
        <docvar key="isa" value="A64" />
        <docvar key="mnemonic" value="BRKNS" />
      </docvars>
      <iclassintro count="1"></iclassintro>
      <regdiagram form="32" psname="BRKNS-P.P.PP-_">
        <box hibit="31" width="9" settings="9">
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
        </box>
        <box hibit="22" name="S" settings="1">
          <c>1</c>
        </box>
        <box hibit="21" width="8" settings="8">
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>0</c>
          <c>1</c>
        </box>
        <box hibit="13" width="4" name="Pg" usename="1">
          <c colspan="4"></c>
        </box>
        <box hibit="9" settings="1">
          <c>0</c>
        </box>
        <box hibit="8" width="4" name="Pn" usename="1">
          <c colspan="4"></c>
        </box>
        <box hibit="4" settings="1">
          <c>0</c>
        </box>
        <box hibit="3" width="4" name="Pdm" usename="1">
          <c colspan="4"></c>
        </box>
      </regdiagram>
      <encoding name="brkns_p_p_pp_" oneofinclass="1" oneof="2" label="Setting the condition flags">
        <docvars>
          <docvar key="cond-setting" value="s" />
          <docvar key="instr-class" value="sve" />
          <docvar key="isa" value="A64" />
          <docvar key="mnemonic" value="BRKNS" />
        </docvars>
        <asmtemplate><text>BRKNS   </text><a link="pdm" hover="Second source and destination scalable predicate register (field &quot;Pdm&quot;)">&lt;Pdm&gt;</a><text>.B, </text><a link="pg" hover="Governing scalable predicate register (field &quot;Pg&quot;)">&lt;Pg&gt;</a><text>/Z, </text><a link="pn" hover="First source scalable predicate register (field &quot;Pn&quot;)">&lt;Pn&gt;</a><text>.B, </text><a link="pdm" hover="Second source and destination scalable predicate register (field &quot;Pdm&quot;)">&lt;Pdm&gt;</a><text>.B</text></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="BRKNS-P.P.PP-_" mylink="BRKNS-P.P.PP-_" enclabels="" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">if !HaveSVE() then UNDEFINED;
integer g = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Pg);
integer n = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Pn);
integer dm = <a link="impl-shared.UInt.1" file="shared_pseudocode.xml" hover="function: integer UInt(bits(N) x)">UInt</a>(Pdm);
boolean setflags = TRUE;</pstext>
        </ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="brkn_p_p_pp_, brkns_p_p_pp_" symboldefcount="1">
      <symbol link="pdm">&lt;Pdm&gt;</symbol>
      <account encodedin="Pdm">
        <intro>
          <para>Is the name of the second source and destination scalable predicate register, encoded in the "Pdm" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="brkn_p_p_pp_, brkns_p_p_pp_" symboldefcount="1">
      <symbol link="pg">&lt;Pg&gt;</symbol>
      <account encodedin="Pg">
        <intro>
          <para>Is the name of the governing scalable predicate register, encoded in the "Pg" field.</para>
        </intro>
      </account>
    </explanation>
    <explanation enclist="brkn_p_p_pp_, brkns_p_p_pp_" symboldefcount="1">
      <symbol link="pn">&lt;Pn&gt;</symbol>
      <account encodedin="Pn">
        <intro>
          <para>Is the name of the first source scalable predicate register, encoded in the "Pn" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="BRKN-P.P.PP-_" mylink="commonps" enclabels="" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute">CheckSVEEnabled();
bits(PL) mask = P[g];
bits(PL) operand1 = P[n];
bits(PL) operand2 = P[dm];
bits(PL) result;

if LastActive(mask, operand1, 8) == '1' then
    result = operand2;
else
    result = <a link="impl-shared.Zeros.0" file="shared_pseudocode.xml" hover="function: bits(N) Zeros()">Zeros</a>();

if setflags then
    PSTATE.&lt;N,Z,C,V&gt; = PredTest(<a link="impl-shared.Ones.1" file="shared_pseudocode.xml" hover="function: bits(N) Ones(integer N)">Ones</a>(PL), result, 8);
P[dm] = result;</pstext>
    </ps>
  </ps_section>
</instructionsection>
