heads/2019-12-release-branch-dirty
diff --git a/data/a64/shoji_iclass_map.txt b/data/a64/shoji_iclass_map.txt
index 6407c45..f98b1ff 100644
--- a/data/a64/shoji_iclass_map.txt
+++ b/data/a64/shoji_iclass_map.txt
@@ -141,7 +141,7 @@ sve_intx_shift_narrow=SVE2 bitwise shift right narrow
 sve_intx_sra=SVE2 bitwise shift right and accumulate
 sve_crypto_binary_const=SVE2 crypto constructive binary operations
 sve_crypto_binary_dest=SVE2 crypto destructive binary operations
-sve_crypto_ternary=SVE2 crypto bitwise ternary operations
+sve_int_tern_log=SVE2 bitwise ternary operations
 sve_crypto_unary=SVE2 crypto unary operations
 sve_crypto_xar=SVE2 crypto bitwise operations with rotate
 sve_fp_fcadd=SVE floating-point complex add (predicated)
@@ -165,10 +165,10 @@ sve_fp_2op_p_zd_d=SVE floating-point convert to integer
 sve_fp_3op_p_pd=SVE floating-point compare vectors
 sve_fp_3op_p_zds_a=SVE floating-point multiply-accumulate writing addend
 sve_fp_3op_p_zds_b=SVE floating-point multiply-accumulate writing multiplicand
-sve_fp_fcvt2=SVE2 floating-point convert precision
+sve_fp_fcvt2=SVE floating-point convert precision odd elements
 sve_fp_pairwise=SVE2 floating-point pairwise operations
-sve_fp_fma_long_by_indexed_elem=SVE2 floating-point multiply-add long (indexed)
-sve_fp_fma_long=SVE2 floating-point multiply-add long
+sve_fp_fma_long_by_indexed_elem=SVE floating-point multiply-add long (indexed)
+sve_fp_fma_long=SVE floating-point multiply-add long
 sve_mem_32b_fill=SVE load vector register
 sve_mem_32b_gld_sv_a=SVE 32-bit gather load halfwords (scalar plus 32-bit scaled offsets)
 sve_mem_32b_gld_sv_b=SVE 32-bit gather load words (scalar plus 32-bit scaled offsets)
@@ -218,3 +218,10 @@ sve_mem_sst_sv2=SVE 64-bit scatter store (scalar plus 64-bit scaled offsets)
 sve_mem_sst_vs2=SVE 64-bit scatter store (scalar plus 64-bit unscaled offsets)
 sve_mem_sstnt_32b_vs=SVE2 32-bit scatter non-temporal store (vector plus scalar)
 sve_mem_sstnt_64b_vs=SVE2 64-bit scatter non-temporal store (vector plus scalar)
+sve_intx_mixed_dot=SVE mixed sign dot product
+sve_intx_mixed_dot_by_indexed_elem=SVE mixed sign dot product (indexed)
+sve_intx_mmla=SVE integer matrix multiply accumulate
+sve_fp_fdot_by_indexed_elem=SVE BFloat16 floating-point dot product (indexed)
+sve_fp_fdot=SVE BFloat16 floating-point dot product
+sve_fp_fmmla=SVE floating point matrix multiply accumulate
+sve_int_perm_bin_long_perm_zz=SVE permute vector segments
\ No newline at end of file
