.nh
.TH "ASR (immediate) -- AArch32" "7" " "  "alias" "general"
.SS ASR (immediate)
 ASR is an alias of MOV

 Arithmetic Shift Right (immediate)

 Arithmetic Shift Right (immediate) shifts a register value right by an
 immediate number of bits, shifting in copies of its sign bit, and writes the
 result to the destination register.


It has encodings from the following instruction sets:  A32 (A1) and  T32 (T2 and T3).

.SS A1 - A32
 
                                                                   
                                                                   
                         20                                        
         28        23  21 |      16      12         7   5 4       0
          |         |   | |       |       |         |   | |       |
  |. . . .|0 0 0 1 1|0 1|0|0 0 0 0|. . . .|. . . . .|1 0|0|. . . .|
  |                 |   | |       |       |         |     |
  `-cond(!= 1111)   |   | `-Rn    `-Rd    `-imm5    |     `-Rm
                    |   `-S                         `-stype
                    `-opc
  
  
 
.SS MOV, shift or rotate by value
 
 ASR{<c>}{<q>} {<Rd>,} <Rm>, #<imm>
 
 MOV{<c>}{<q>} <Rd>, <Rm>, ASR #<imm>
.SS T2 - T32
 
                                                                   
                                                                   
                                                                   
       13  11         6     3     0                                
        |   |         |     |     |                                
   0 0 0|1 0|. . . . .|. . .|. . .|                                
        |   |         |     |
        |   `-imm5    `-Rm  `-Rd
        `-op
  
  
 
.SS T2
 
 ASR<c>{<q>} {<Rd>,} <Rm>, #<imm>
 
 MOV<c>{<q>} <Rd>, <Rm>, ASR #<imm>
.SS T3 - T32
 
                                                                   
                                                                   
                         05        15                              
               10      06 |      01 |    12       8   6   4       0
                |       | |       | |     |       |   |   |       |
   1 1 1 0 1 0 1|0 0 1 0|0|1 1 1 1|0|. . .|. . . .|. .|1 0|. . . .|
                |       | |         |     |       |   |   |
                `-op1   | `-Rn      |     `-Rd    |   |   `-Rm
                        `-S         `-imm3        |   `-stype
                                                  `-imm2
  
  
 
.SS MOV, shift or rotate by value
 
 ASR<c>.W {<Rd>,} <Rm>, #<imm>
 
 ASR{<c>}{<q>} {<Rd>,} <Rm>, #<imm>
 
 MOV{<c>}{<q>} <Rd>, <Rm>, ASR #<imm>
 

.SS Assembler Symbols

 <c>
  See Standard assembler syntax fields.

 <q>
  See Standard assembler syntax fields.

 <Rd>
  Encoded in Rd
  For encoding A1: is the general-purpose destination register, encoded in the
  "Rd" field. Arm deprecates using the PC as the destination register, but if
  the PC is used, the instruction is a branch to the address calculated by the
  operation. This is an interworking branch, see Pseudocode description of
  operations on the AArch32 general-purpose registers and the PC.

 <Rd>
  Encoded in Rd
  For encoding T2 and T3: is the general-purpose destination register, encoded
  in the "Rd" field.

 <Rm>
  Encoded in Rm
  For encoding A1: is the general-purpose source register, encoded in the "Rm"
  field. The PC can be used, but this is deprecated.

 <Rm>
  Encoded in Rm
  For encoding T2 and T3: is the general-purpose source register, encoded in the
  "Rm" field.

 <imm>
  Encoded in imm5
  For encoding A1 and T2: is the shift amount, in the range 1 to 32, encoded in
  the "imm5" field as <imm> modulo 32.

 <imm>
  Encoded in imm3:imm2
  For encoding T3: is the shift amount, in the range 1 to 32, encoded in the
  "imm3:imm2" field as <imm> modulo 32.



.SS Operation

 The manual of MOV gives pseudocode for ASR.
