.nh
.TH "IT -- AArch32" "7" " "  "instruction" "general"
.SS IT
 If-Then

 If-Then makes up to four following instructions (the IT block) conditional. The
 conditions for the instructions in the IT block are the same as, or the inverse
 of, the condition the IT instruction specifies for the first instruction in the
 block.

 The IT instruction itself does not affect the condition flags, but the
 execution of the instructions in the IT block can change the condition flags.

 16-bit instructions in the IT block, other than CMP, CMN and TST, do not set
 the condition flags. An IT instruction with the AL condition can change the
 behavior without conditional execution.

 The architecture permits exception return to an instruction in the IT block
 only if the restoration of the CPSR restores ITSTATE to a state consistent with
 the conditions specified by the IT instruction.  Any other exception return to
 an instruction in an IT block is unpredictable. Any branch to a target
 instruction in an IT block is not permitted, and if such a branch is made it is
 unpredictable what condition is used when executing that target instruction and
 any subsequent instruction in the IT block.

 Many uses of the IT instruction are deprecated for performance reasons, and an
 implementation might include ITD controls that can disable those uses of IT,
 making them undefined.

 For more information see Conditional execution and Conditional instructions.
 The first of these sections includes more information about the ITD controls.

 For more information about the constrained unpredictable behavior of this
 instruction, see Architectural Constraints on UNPREDICTABLE behaviors.

 Related encodings: Miscellaneous 16-bit instructions.



.SS T1 - T32
 
                                                                   
                                                                   
                                                                   
                  8       4       0                                
                  |       |       |                                
   1 0 1 1 1 1 1 1|. . . .|. . . .|                                
                  |       |
                  |       `-mask(!= 0000)
                  `-firstcond
  
  
 
.SS T1
 
 IT{<x>{<y>{<z>}}}{<q>} <cond>
 
 if mask == '0000' then SEE "Related encodings";
 if firstcond == '1111' || (firstcond == '1110' && BitCount(mask) != 1) then UNPREDICTABLE;
 if InITBlock() then UNPREDICTABLE;
 
 EncodingSpecificOperations();
 AArch32.CheckITEnabled(mask);
 PSTATE.IT<7:0> = firstcond:mask;
 ShouldAdvanceIT = FALSE;
 

.SS Assembler Symbols

 <x>
  Encoded in mask[3]
  The condition for the second instruction in the IT block. If omitted, the
  "mask" field is set to 0b1000. If present it is encoded in the "mask[3]"
  field:                                       Tfirstcond[0]
  ENOT firstcond[0]

 <y>
  Encoded in mask[2]
  The condition for the third instruction in the IT block. If omitted and <x> is
  present, the "mask[2:0]" field is set to 0b100. If <y> is present it is
  encoded in the "mask[2]" field:
  Tfirstcond[0]                                         ENOT firstcond[0]

 <z>
  Encoded in mask[1]
  The condition for the fourth instruction in the IT block. If omitted and <y>
  is present, the "mask[1:0]" field is set to 0b10. If <z> is present, the
  "mask[0]" field is set to 1, and it is encoded in the "mask[1]" field:
  Tfirstcond[0]                                         ENOT firstcond[0]

 <q>
  See Standard assembler syntax fields.

 <cond>
  Encoded in firstcond
  The condition for the first instruction in the IT block, encoded in the
  "firstcond" field. See Condition codes for the range of conditions available,
  and the encodings.



.SS Operation

 EncodingSpecificOperations();
 AArch32.CheckITEnabled(mask);
 PSTATE.IT<7:0> = firstcond:mask;
 ShouldAdvanceIT = FALSE;

