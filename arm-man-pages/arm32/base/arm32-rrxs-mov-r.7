.nh
.TH "RRXS -- AArch32" "7" " "  "alias" "general"
.SS RRXS
 RRXS is an alias of MOVS

 Rotate Right with Extend, setting flags

 Rotate Right with Extend, setting flags provides the value of the contents of a
 register shifted right by one place, with the Carry flag shifted into bit[31].

 If the destination register is not the PC, this instruction updates the
 condition flags based on the result, and bit[0] is shifted into the Carry flag.

 The field descriptions for <Rd> identify the encodings where the PC is
 permitted as the destination register. Arm deprecates any use of these
 encodings. However, when the destination register is the PC:

 The PE branches to the address written to the PC, and restores PSTATE from
 SPSR_<current_mode>.

 The PE checks SPSR_<current_mode> for an illegal return event.  See Illegal
 return events from AArch32 state.

 The instruction is undefined in Hyp mode.

 The instruction is constrained unpredictable in User mode and System mode.



It has encodings from the following instruction sets:  A32 (A1) and  T32 (T3).

.SS A1 - A32
 
                                                                   
                                                                   
                         20                                        
         28        23  21 |      16      12         7   5 4       0
          |         |   | |       |       |         |   | |       |
  |. . . .|0 0 0 1 1|0 1|1|0 0 0 0|. . . .|0 0 0 0 0|1 1|0|. . . .|
  |                 |   | |       |       |         |     |
  `-cond(!= 1111)   |   | `-Rn    `-Rd    `-imm5    |     `-Rm
                    |   `-S                         `-stype
                    `-opc
  
  
 
.SS MOVS, rotate right with extend
 
 RRXS{<c>}{<q>} {<Rd>,} <Rm>
 
 MOVS{<c>}{<q>} <Rd>, <Rm>, RRX
.SS T3 - T32
 
                                                                   
                                                                   
                         05        15                              
               10      06 |      01 |    12       8   6   4       0
                |       | |       | |     |       |   |   |       |
   1 1 1 0 1 0 1|0 0 1 0|1|1 1 1 1|0|0 0 0|. . . .|0 0|1 1|. . . .|
                |       | |         |     |       |   |   |
                `-op1   | `-Rn      |     `-Rd    |   |   `-Rm
                        `-S         `-imm3        |   `-stype
                                                  `-imm2
  
  
 
.SS MOVS, rotate right with extend
 
 RRXS{<c>}{<q>} {<Rd>,} <Rm>
 
 MOVS{<c>}{<q>} <Rd>, <Rm>, RRX
 

.SS Assembler Symbols

 <c>
  See Standard assembler syntax fields.

 <q>
  See Standard assembler syntax fields.

 <Rd>
  Encoded in Rd
  For encoding A1: is the general-purpose destination register, encoded in the
  "Rd" field. Arm deprecates using the PC as the destination register, but if
  the PC is used, the instruction performs an exception return, that restores
  PSTATE from SPSR_<current_mode>.

 <Rd>
  Encoded in Rd
  For encoding T3: is the general-purpose destination register, encoded in the
  "Rd" field.

 <Rm>
  Encoded in Rm
  For encoding A1: is the general-purpose source register, encoded in the "Rm"
  field. The PC can be used, but this is deprecated.

 <Rm>
  Encoded in Rm
  For encoding T3: is the general-purpose source register, encoded in the "Rm"
  field.



.SS Operation

 The manual of MOVS gives pseudocode for RRXS.
