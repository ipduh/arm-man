.nh
.TH "ORN, ORNS (immediate) -- AArch32" "7" " "  "instruction" "general"
.SS ORN, ORNS (immediate)
 Bitwise OR NOT (immediate)

 Bitwise OR NOT (immediate) performs a bitwise (inclusive) OR of a register
 value and the complement of an immediate value, and writes the result to the
 destination register. It can optionally update the condition flags based on the
 result.

 For more information about the constrained unpredictable behavior of this
 instruction, see Architectural Constraints on UNPREDICTABLE behaviors.



.SS T1 - T32
 
                                                                   
               10                                                  
             11 |        05        15                              
           12 | |      06 |      01 |    12       8               0
            | | |       | |       | |     |       |               |
   1 1 1 1 0|.|0|0 0 1 1|.|. . . .|0|. . .|. . . .|. . . . . . . .|
            |   |       | |         |     |       |
            `-i `-op1   | |         |     `-Rd    `-imm8
                        | |         `-imm3
                        | `-Rn(!= 1111)
                        `-S
  
  
 
.SS Flag setting(S == 1)
 
 ORNS{<c>}{<q>} {<Rd>,} <Rn>, #<const>
.SS Not flag setting(S == 0)
 
 ORN{<c>}{<q>} {<Rd>,} <Rn>, #<const>
 
 if Rn == '1111' then SEE "MVN (immediate)";
 d = UInt(Rd);  n = UInt(Rn);  setflags = (S == '1');
 (imm32, carry) = T32ExpandImm_C(i:imm3:imm8, PSTATE.C);
 if d == 15 then UNPREDICTABLE; // Armv8-A removes UNPREDICTABLE for R13
 
 if ConditionPassed() then
     EncodingSpecificOperations();
     result = R[n] OR NOT(imm32);
     R[d] = result;
     if setflags then
         PSTATE.N = result<31>;
         PSTATE.Z = IsZeroBit(result);
         PSTATE.C = carry;
         // PSTATE.V unchanged
 

.SS Assembler Symbols

 <c>
  See Standard assembler syntax fields.

 <q>
  See Standard assembler syntax fields.

 <Rd>
  Encoded in Rd
  Is the general-purpose destination register, encoded in the "Rd" field. If
  omitted, this register is the same as <Rn>.

 <Rn>
  Encoded in Rn
  Is the general-purpose source register, encoded in the "Rn" field.

 <const>
  Encoded in i:imm3:imm8
  An immediate value. See Modified immediate constants in T32 instructions for
  the range of values.



.SS Operation

 if ConditionPassed() then
     EncodingSpecificOperations();
     result = R[n] OR NOT(imm32);
     R[d] = result;
     if setflags then
         PSTATE.N = result<31>;
         PSTATE.Z = IsZeroBit(result);
         PSTATE.C = carry;
         // PSTATE.V unchanged


.SS Operational Notes

 
 If CPSR.DIT is 1 and this instruction does not use R15 as either its source or destination: 
 
 The execution time of this instruction is independent of: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
 The response of this instruction to asynchronous exceptions does not vary based on: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
