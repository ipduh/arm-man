.nh
.TH "UQSAX -- AArch32" "7" " "  "instruction" "general"
.SS UQSAX
 Unsigned Saturating Subtract and Add with Exchange

 Unsigned Saturating Subtract and Add with Exchange exchanges the two halfwords
 of the second operand, performs one unsigned 16-bit integer subtraction and one
 unsigned 16-bit addition, saturates the results to the 16-bit unsigned integer
 range 0 <= x <= 216 - 1, and writes the results to the destination register.

 For more information about the constrained unpredictable behavior of this
 instruction, see Architectural Constraints on UNPREDICTABLE behaviors.


It has encodings from the following instruction sets:  A32 (A1) and  T32 (T1).

.SS A1 - A32
 
                                                                   
                                             10                    
                                           11 |                    
         28        23    20      16      12 | | 9 8 7   5 4       0
          |         |     |       |       | | | | | |   | |       |
  |. . . .|0 1 1 0 0|1 1 0|. . . .|. . . .|1|1|1|1|0|1 0|1|. . . .|
  |                 |     |       |               | |     |
  `-cond(!= 1111)   `-op1 `-Rn    `-Rd            | `-op2 `-Rm
                                                  `-B
  
  
 
.SS A1
 
 UQSAX{<c>}{<q>} {<Rd>,} <Rn>, <Rm>
 
 d = UInt(Rd);  n = UInt(Rn);  m = UInt(Rm);
 if d == 15 || n == 15 || m == 15 then UNPREDICTABLE;
.SS T1 - T32
 
                                                                   
                                                                   
                                                                   
                   08    05      01      12       8 7 6 5 4       0
                    |     |       |       |       | | | | |       |
   1 1 1 1 1 0 1 0 1|1 1 0|. . . .|1 1 1 1|. . . .|0|1|0|1|. . . .|
                    |     |               |         | | | |
                    `-op1 `-Rn            `-Rd      | | | `-Rm
                                                    | | `-S
                                                    | `-H
                                                    `-U
  
  
 
.SS T1
 
 UQSAX{<c>}{<q>} {<Rd>,} <Rn>, <Rm>
 
 d = UInt(Rd);  n = UInt(Rn);  m = UInt(Rm);
 if d == 15 || n == 15 || m == 15 then UNPREDICTABLE; // Armv8-A removes UNPREDICTABLE for R13
 
 if ConditionPassed() then
     EncodingSpecificOperations();
     sum  = UInt(R[n]<15:0>) + UInt(R[m]<31:16>);
     diff = UInt(R[n]<31:16>) - UInt(R[m]<15:0>);
     R[d]<15:0>  = UnsignedSat(sum, 16);
     R[d]<31:16> = UnsignedSat(diff, 16);
 

.SS Assembler Symbols

 <c>
  See Standard assembler syntax fields.

 <q>
  See Standard assembler syntax fields.

 <Rd>
  Encoded in Rd
  Is the general-purpose destination register, encoded in the "Rd" field.

 <Rn>
  Encoded in Rn
  Is the first general-purpose source register, encoded in the "Rn" field.

 <Rm>
  Encoded in Rm
  Is the second general-purpose source register, encoded in the "Rm" field.



.SS Operation

 if ConditionPassed() then
     EncodingSpecificOperations();
     sum  = UInt(R[n]<15:0>) + UInt(R[m]<31:16>);
     diff = UInt(R[n]<31:16>) - UInt(R[m]<15:0>);
     R[d]<15:0>  = UnsignedSat(sum, 16);
     R[d]<31:16> = UnsignedSat(diff, 16);

