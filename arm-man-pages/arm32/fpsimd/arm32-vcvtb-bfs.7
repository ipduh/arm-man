.nh
.TH "VCVTB (BFloat16) -- AArch32" "7" " "  "instruction" "fpsimd"
.SS VCVTB (BFloat16)
 Converts from a single-precision value to a BFloat16 value in the bottom half
 of a single-precision register

 Converts the single-precision value in a single-precision register to BFloat16
 format and writes the result into the bottom half of a single precision
 register, preserving the top 16 bits of the destination register.

 Unlike the BFloat16 multiplication instructions, this instruction honors all
 the control bits in the FPSCR that apply to single-precision arithmetic,
 including the rounding mode. This instruction can generate a floating-point
 exception which causes a cumulative exception bit in the FPSCR to be set, or a
 synchronous exception to be taken, depending on the enable bits in the FPSCR.


It has encodings from the following instruction sets:  A32 (A1) and  T32 (T1).

.SS A1 - A32
 
                                                                   
                                                                   
                     22    19                                      
         28        23 |  20 |    16      12  10   8 7 6 5 4       0
          |         | |   | |     |       |   |   | | | | |       |
  |. . . .|1 1 1 0 1|.|1 1|0|0 1 1|. . . .|1 0|0 1|0|1|.|0|. . . .|
  |                 |     | |     |           |   |   |   |
  `-cond(!= 1111)   `-D   | |     `-Vd        |   |   `-M `-Vm
                          | `-opc2            |   `-o3
                          `-o1                `-size
  
  
 
.SS A1
 
 VCVTB{<c>}{<q>}.BF16.F32 <Sd>, <Sm>
 
 if !HaveAArch32BF16Ext() then UNDEFINED;
 integer d = UInt(Vd:D);
 integer m = UInt(Vm:M);
.SS T1 - T32
 
                                                                   
                                                                   
                     07    04                                      
                   08 |  05 |    01      12  10   8 7 6 5 4       0
                    | |   | |     |       |   |   | | | | |       |
   1 1 1 0 1 1 1 0 1|.|1 1|0|0 1 1|. . . .|1 0|0 1|0|1|.|0|. . . .|
                    |     | |     |           |   |   |   |
                    `-D   | |     `-Vd        |   |   `-M `-Vm
                          | `-opc2            |   `-o3
                          `-o1                `-size
  
  
 
.SS T1
 
 VCVTB{<c>}{<q>}.BF16.F32 <Sd>, <Sm>
 
 if !HaveAArch32BF16Ext() then UNDEFINED;
 integer d = UInt(Vd:D);
 integer m = UInt(Vm:M);
 
 if ConditionPassed() then
     EncodingSpecificOperations();
     CheckVFPEnabled(TRUE);
 
     S[d]<15:0> = FPConvertBF(S[m], FPSCR);
 

.SS Assembler Symbols

 <c>
  See Standard assembler syntax fields.

 <q>
  See Standard assembler syntax fields.

 <Sd>
  Encoded in Vd:D
  Is the 32-bit name of the SIMD&FP destination register, encoded in the "Vd:D"
  field.

 <Sm>
  Encoded in Vm:M
  Is the 32-bit name of the SIMD&FP source register, encoded in the "Vm:M"
  field.



.SS Operation

 if ConditionPassed() then
     EncodingSpecificOperations();
     CheckVFPEnabled(TRUE);
 
     S[d]<15:0> = FPConvertBF(S[m], FPSCR);

