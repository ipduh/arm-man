.nh
.TH "LDR (literal, SIMD&FP) -- A64" "7" " "  "instruction" "fpsimd"
.SS LDR (literal, SIMD&FP)
 Load SIMD&FP Register (PC-relative literal)

 Load SIMD&FP Register (PC-relative literal). This instruction loads a SIMD&FP
 register from memory. The address that is used for the load is calculated from
 the PC value and an immediate offset.

 Depending on the settings in the CPACR_EL1, CPTR_EL2, and CPTR_EL3 registers,
 and the current Security state and Exception level, an attempt to execute the
 instruction might be trapped.



.SS Literal - A64
 
                                                                   
                                                                   
             26                                                    
     30    27 |  24                                     5         0
      |     | |   |                                     |         |
  |. .|0 1 1|1|0 0|. . . . . . . . . . . . . . . . . . .|. . . . .|
  |         |     |                                     |
  `-opc     `-V   `-imm19                               `-Rt
  
  
 
.SS 32-bit(opc == 00)
 
 LDR  <St>, <label>
.SS 64-bit(opc == 01)
 
 LDR  <Dt>, <label>
.SS 128-bit(opc == 10)
 
 LDR  <Qt>, <label>
 
 integer t = UInt(Rt);
 integer size;
 bits(64) offset;
 
 case opc of
     when '00'
         size = 4;
     when '01'
         size = 8;
     when '10'
         size = 16;
     when '11'
         UNDEFINED;
 
 offset = SignExtend(imm19:'00', 64);
 boolean tag_checked = FALSE;
 
 bits(64) address = PC[] + offset;
 bits(size*8) data;
 
 if HaveMTEExt() then
     SetTagCheckedInstruction(tag_checked);
 
 CheckFPAdvSIMDEnabled64();
 
 data = Mem[address, size, AccType_VEC];
 V[t] = data;
 

.SS Assembler Symbols

 <Dt>
  Encoded in Rt
  Is the 64-bit name of the SIMD&FP register to be loaded, encoded in the "Rt"
  field.

 <Qt>
  Encoded in Rt
  Is the 128-bit name of the SIMD&FP register to be loaded, encoded in the "Rt"
  field.

 <St>
  Encoded in Rt
  Is the 32-bit name of the SIMD&FP register to be loaded, encoded in the "Rt"
  field.

 <label>
  Encoded in imm19
  Is the program label from which the data is to be loaded. Its offset from the
  address of this instruction, in the range +/-1MB, is encoded as "imm19" times
  4.



.SS Operation

 bits(64) address = PC[] + offset;
 bits(size*8) data;
 
 if HaveMTEExt() then
     SetTagCheckedInstruction(tag_checked);
 
 CheckFPAdvSIMDEnabled64();
 
 data = Mem[address, size, AccType_VEC];
 V[t] = data;


.SS Operational Notes

 
 If PSTATE.DIT is 1, the timing of this instruction is insensitive to the value of the data being loaded or stored.
