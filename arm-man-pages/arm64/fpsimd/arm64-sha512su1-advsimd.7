.nh
.TH "SHA512SU1 -- A64" "7" " "  "instruction" "advsimd"
.SS SHA512SU1
 SHA512 Schedule Update 1

 SHA512 Schedule Update 1 takes the values from the three source SIMD&FP
 registers and produces a 128-bit output value that combines the gamma1
 functions of two iterations of the SHA512 schedule update that are performed
 after the first 16 iterations within a block. It returns this value to the
 destination SIMD&FP register.

 This instruction is implemented only when ARMv8.2-SHA is implemented.



.SS Advanced SIMD - A64 - SHA512SU1_VVV2_cryptosha512_3
 
                                                                   
                                     14                            
                                   15 |                            
                       21        16 | |  12  10         5         0
                        |         | | |   |   |         |         |
   1 1 0 0 1 1 1 0 0 1 1|. . . . .|1|0|0 0|1 0|. . . . .|. . . . .|
                        |           |     |   |         |
                        `-Rm        `-O   |   `-Rn      `-Rd
                                          `-opcode
  
  
 
.SS Advanced SIMD
 
 SHA512SU1  <Vd>.2D, <Vn>.2D, <Vm>.2D
 
 if !HaveSHA512Ext() then UNDEFINED;
 integer d = UInt(Rd);
 integer n = UInt(Rn);
 integer m = UInt(Rm);
 
 AArch64.CheckFPAdvSIMDEnabled();
 
 bits(64) sig1;
 bits(128) Vtmp;
 bits(128) X = V[n];
 bits(128) Y = V[m];
 bits(128) W = V[d];
 
 sig1 = ROR(X<127:64>, 19) EOR ROR(X<127:64>,61) EOR ('000000':X<127:70>);
 Vtmp<127:64> = W<127:64> + sig1 + Y<127:64>;
 sig1 = ROR(X<63:0>, 19) EOR ROR(X<63:0>,61) EOR ('000000':X<63:6>);
 Vtmp<63:0> = W<63:0> + sig1 + Y<63:0>;
 V[d] = Vtmp;
 

.SS Assembler Symbols

 <Vd>
  Encoded in Rd
  Is the name of the SIMD&FP source and destination register, encoded in the
  "Rd" field.

 <Vn>
  Encoded in Rn
  Is the name of the second SIMD&FP source register, encoded in the "Rn" field.

 <Vm>
  Encoded in Rm
  Is the name of the third SIMD&FP source register, encoded in the "Rm" field.



.SS Operation

 AArch64.CheckFPAdvSIMDEnabled();
 
 bits(64) sig1;
 bits(128) Vtmp;
 bits(128) X = V[n];
 bits(128) Y = V[m];
 bits(128) W = V[d];
 
 sig1 = ROR(X<127:64>, 19) EOR ROR(X<127:64>,61) EOR ('000000':X<127:70>);
 Vtmp<127:64> = W<127:64> + sig1 + Y<127:64>;
 sig1 = ROR(X<63:0>, 19) EOR ROR(X<63:0>,61) EOR ('000000':X<63:6>);
 Vtmp<63:0> = W<63:0> + sig1 + Y<63:0>;
 V[d] = Vtmp;


.SS Operational Notes

 
 If PSTATE.DIT is 1: 
 
 The execution time of this instruction is independent of: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
 The response of this instruction to asynchronous exceptions does not vary based on: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
