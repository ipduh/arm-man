.nh
.TH "SM3SS1 -- A64" "7" " "  "instruction" "advsimd"
.SS SM3SS1
 SM3SS1

 SM3SS1 rotates the top 32 bits of the 128-bit vector in the first source
 SIMD&FP register by 12, and adds that 32-bit value to the two other 32-bit
 values held in the top 32 bits of each of the 128-bit vectors in the second and
 third source SIMD&FP registers, rotating this result left by 7 and writing the
 final result into the top 32 bits of the vector in the destination SIMD&FP
 register, with the bottom 96 bits of the vector being written to 0.

 This instruction is implemented only when ARMv8.2-SM is implemented.



.SS Advanced SIMD - A64 - SM3SS1_VVV4_crypto4
 
                                                                   
                                                                   
                                   15                              
                   23  21        16 |        10         5         0
                    |   |         | |         |         |         |
   1 1 0 0 1 1 1 0 0|1 0|. . . . .|0|. . . . .|. . . . .|. . . . .|
                    |   |           |         |         |
                    |   `-Rm        `-Ra      `-Rn      `-Rd
                    `-Op0
  
  
 
.SS Advanced SIMD
 
 SM3SS1  <Vd>.4S, <Vn>.4S, <Vm>.4S, <Va>.4S
 
 if !HaveSM3Ext() then UNDEFINED;
 integer d = UInt(Rd);
 integer n = UInt(Rn);
 integer m = UInt(Rm);
 
 integer a = UInt(Ra);
 
 AArch64.CheckFPAdvSIMDEnabled();
 
 bits(128) Vm = V[m];
 bits(128) Vn = V[n];
 bits(128) Vd = V[d];
 bits(128) Va = V[a];
 Vd<127:96> = ROL((ROL(Vn<127:96>,12) + Vm<127:96> + Va<127:96>) , 7);
 Vd<95:0> = Zeros();
 V[d] = Vd;
 

.SS Assembler Symbols

 <Vd>
  Encoded in Rd
  Is the name of the SIMD&FP destination register, encoded in the "Rd" field.

 <Vn>
  Encoded in Rn
  Is the name of the first SIMD&FP source register, encoded in the "Rn" field.

 <Vm>
  Encoded in Rm
  Is the name of the second SIMD&FP source register, encoded in the "Rm" field.

 <Va>
  Encoded in Ra
  Is the name of the third SIMD&FP source register, encoded in the "Ra" field.



.SS Operation

 AArch64.CheckFPAdvSIMDEnabled();
 
 bits(128) Vm = V[m];
 bits(128) Vn = V[n];
 bits(128) Vd = V[d];
 bits(128) Va = V[a];
 Vd<127:96> = ROL((ROL(Vn<127:96>,12) + Vm<127:96> + Va<127:96>) , 7);
 Vd<95:0> = Zeros();
 V[d] = Vd;


.SS Operational Notes

 
 If PSTATE.DIT is 1: 
 
 The execution time of this instruction is independent of: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
 The response of this instruction to asynchronous exceptions does not vary based on: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
