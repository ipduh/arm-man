.nh
.TH "SHA256SU0 -- A64" "7" " "  "instruction" "advsimd"
.SS SHA256SU0
 SHA256 schedule update 0

 SHA256 schedule update 0.



.SS Advanced SIMD - A64 - SHA256SU0_VV_cryptosha2
 
                                                                   
                                                                   
                                                                   
                 24  22        17        12  10         5         0
                  |   |         |         |   |         |         |
   0 1 0 1 1 1 1 0|0 0|1 0 1 0 0|0 0 0 1 0|1 0|. . . . .|. . . . .|
                  |             |             |         |
                  `-size        `-opcode      `-Rn      `-Rd
  
  
 
.SS Advanced SIMD
 
 SHA256SU0  <Vd>.4S, <Vn>.4S
 
 integer d = UInt(Rd);
 integer n = UInt(Rn);
 if !HaveSHA256Ext() then UNDEFINED;
 
 AArch64.CheckFPAdvSIMDEnabled();
 
 bits(128) operand1 = V[d];
 bits(128) operand2 = V[n];
 bits(128) result;
 bits(128) T = operand2<31:0> : operand1<127:32>;
 bits(32) elt;
 
 for e = 0 to 3
     elt = Elem[T, e, 32];
     elt = ROR(elt, 7) EOR ROR(elt, 18) EOR LSR(elt, 3);
     Elem[result, e, 32] = elt + Elem[operand1, e, 32];
 V[d] = result;
 

.SS Assembler Symbols

 <Vd>
  Encoded in Rd
  Is the name of the SIMD&FP source and destination register, encoded in the
  "Rd" field.

 <Vn>
  Encoded in Rn
  Is the name of the second SIMD&FP source register, encoded in the "Rn" field.



.SS Operation

 AArch64.CheckFPAdvSIMDEnabled();
 
 bits(128) operand1 = V[d];
 bits(128) operand2 = V[n];
 bits(128) result;
 bits(128) T = operand2<31:0> : operand1<127:32>;
 bits(32) elt;
 
 for e = 0 to 3
     elt = Elem[T, e, 32];
     elt = ROR(elt, 7) EOR ROR(elt, 18) EOR LSR(elt, 3);
     Elem[result, e, 32] = elt + Elem[operand1, e, 32];
 V[d] = result;


.SS Operational Notes

 
 If PSTATE.DIT is 1: 
 
 The execution time of this instruction is independent of: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
 The response of this instruction to asynchronous exceptions does not vary based on: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
