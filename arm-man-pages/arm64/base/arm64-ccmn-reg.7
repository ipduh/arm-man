.nh
.TH "CCMN (register) -- A64" "7" " "  "instruction" "general"
.SS CCMN (register)
 Conditional Compare Negative (register)

 Conditional Compare Negative (register) sets the value of the condition flags
 to the result of the comparison of a register value and the inverse of another
 register value if the condition is TRUE, and an immediate value otherwise.



.SS Integer - A64 - general
 
                                                                   
       29                                    10                    
     30 |                                  11 |                    
   31 | |              21        16      12 | |         5 4       0
    | | |               |         |       | | |         | |       |
  |.|0|1|1 1 0 1 0 0 1 0|. . . . .|. . . .|0|0|. . . . .|0|. . . .|
  | | |                 |         |         | |         | |
  | | `-S               `-Rm      `-cond    | `-Rn      | `-nzcv
  | `-op                                    `-o2        `-o3
  `-sf
  
  
 
.SS 32-bit(sf == 0)
 
 CCMN  <Wn>, <Wm>, #<nzcv>, <cond>
.SS 64-bit(sf == 1)
 
 CCMN  <Xn>, <Xm>, #<nzcv>, <cond>
 
 integer n = UInt(Rn);
 integer m = UInt(Rm);
 integer datasize = if sf == '1' then 64 else 32;
 boolean sub_op = (op == '1');
 bits(4) condition = cond;
 bits(4) flags = nzcv;
 
 bits(datasize) operand1 = X[n];
 bits(datasize) operand2 = X[m];
 bit carry_in = '0';
 
 if ConditionHolds(condition) then
     if sub_op then
         operand2 = NOT(operand2);
         carry_in = '1';
     (-, flags) = AddWithCarry(operand1, operand2, carry_in);
 PSTATE.<N,Z,C,V> = flags;
 

.SS Assembler Symbols

 <Wn>
  Encoded in Rn
  Is the 32-bit name of the first general-purpose source register, encoded in
  the "Rn" field.

 <Wm>
  Encoded in Rm
  Is the 32-bit name of the second general-purpose source register, encoded in
  the "Rm" field.

 <Xn>
  Encoded in Rn
  Is the 64-bit name of the first general-purpose source register, encoded in
  the "Rn" field.

 <Xm>
  Encoded in Rm
  Is the 64-bit name of the second general-purpose source register, encoded in
  the "Rm" field.

 <nzcv>
  Encoded in nzcv
  Is the flag bit specifier, an immediate in the range 0 to 15, giving the
  alternative state for the 4-bit NZCV condition flags, encoded in the "nzcv"
  field.

 <cond>
  Encoded in cond
  Is one of the standard conditions, encoded in the "cond" field in the standard
  way.



.SS Operation

 bits(datasize) operand1 = X[n];
 bits(datasize) operand2 = X[m];
 bit carry_in = '0';
 
 if ConditionHolds(condition) then
     if sub_op then
         operand2 = NOT(operand2);
         carry_in = '1';
     (-, flags) = AddWithCarry(operand1, operand2, carry_in);
 PSTATE.<N,Z,C,V> = flags;


.SS Operational Notes

 
 If PSTATE.DIT is 1: 
 
 The execution time of this instruction is independent of: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
 The response of this instruction to asynchronous exceptions does not vary based on: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
