.nh
.TH "CSINV -- A64" "7" " "  "instruction" "general"
.SS CSINV
 Conditional Select Invert

 Conditional Select Invert returns, in the destination register, the value of
 the first source register if the condition is TRUE, and otherwise returns the
 bitwise inversion value of the second source register.



.SS Integer - A64 - general
 
                                                                   
       29                                    10                    
     30 |                                  11 |                    
   31 | |              21        16      12 | |         5         0
    | | |               |         |       | | |         |         |
  |.|1|0|1 1 0 1 0 1 0 0|. . . . .|. . . .|0|0|. . . . .|. . . . .|
  | | |                 |         |         | |         |
  | | `-S               `-Rm      `-cond    | `-Rn      `-Rd
  | `-op                                    `-o2
  `-sf
  
  
 
.SS 32-bit(sf == 0)
 
 CSINV  <Wd>, <Wn>, <Wm>, <cond>
.SS 64-bit(sf == 1)
 
 CSINV  <Xd>, <Xn>, <Xm>, <cond>
 
 integer d = UInt(Rd);
 integer n = UInt(Rn);
 integer m = UInt(Rm);
 integer datasize = if sf == '1' then 64 else 32;
 bits(4) condition = cond;
 boolean else_inv = (op == '1');
 boolean else_inc = (o2 == '1');
 
 bits(datasize) result;
 bits(datasize) operand1 = X[n];
 bits(datasize) operand2 = X[m];
 
 if ConditionHolds(condition) then
     result = operand1;
 else
     result = operand2;
     if else_inv then result = NOT(result);
     if else_inc then result = result + 1;
 
 X[d] = result;
 

.SS Assembler Symbols

 <Wd>
  Encoded in Rd
  Is the 32-bit name of the general-purpose destination register, encoded in the
  "Rd" field.

 <Wn>
  Encoded in Rn
  Is the 32-bit name of the first general-purpose source register, encoded in
  the "Rn" field.

 <Wm>
  Encoded in Rm
  Is the 32-bit name of the second general-purpose source register, encoded in
  the "Rm" field.

 <Xd>
  Encoded in Rd
  Is the 64-bit name of the general-purpose destination register, encoded in the
  "Rd" field.

 <Xn>
  Encoded in Rn
  Is the 64-bit name of the first general-purpose source register, encoded in
  the "Rn" field.

 <Xm>
  Encoded in Rm
  Is the 64-bit name of the second general-purpose source register, encoded in
  the "Rm" field.

 <cond>
  Encoded in cond
  Is one of the standard conditions, encoded in the "cond" field in the standard
  way.



.SS Operation

 bits(datasize) result;
 bits(datasize) operand1 = X[n];
 bits(datasize) operand2 = X[m];
 
 if ConditionHolds(condition) then
     result = operand1;
 else
     result = operand2;
     if else_inv then result = NOT(result);
     if else_inc then result = result + 1;
 
 X[d] = result;


.SS Operational Notes

 
 If PSTATE.DIT is 1: 
 
 The execution time of this instruction is independent of: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
 The response of this instruction to asynchronous exceptions does not vary based on: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
