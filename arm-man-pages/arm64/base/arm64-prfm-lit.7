.nh
.TH "PRFM (literal) -- A64" "7" " "  "instruction" "general"
.SS PRFM (literal)
 Prefetch Memory (literal)

 Prefetch Memory (literal) signals the memory system that data memory accesses
 from a specified address are likely to occur in the near future. The memory
 system can respond by taking actions that are expected to speed up the memory
 accesses when they do occur, such as preloading the cache line containing the
 specified address into one or more caches.

 The effect of an PRFM instruction is implementation defined. For more
 information, see Prefetch memory.

 For information about memory accesses, see Load/Store addressing modes.



.SS Literal - A64 - PRFM_P_loadlit
 
                                                                   
                                                                   
             26                                                    
     30    27 |  24                                     5         0
      |     | |   |                                     |         |
  |1 1|0 1 1|0|0 0|. . . . . . . . . . . . . . . . . . .|. . . . .|
  |         |     |                                     |
  `-opc     `-V   `-imm19                               `-Rt
  
  
 
.SS Literal
 
 PRFM  (<prfop>|#<imm5>), <label>
 
 integer t = UInt(Rt);
 MemOp memop = MemOp_LOAD;
 boolean signed = FALSE;
 integer size;
 bits(64) offset;
 
 case opc of
     when '00'
         size = 4;
     when '01'
         size = 8;
     when '10'
         size = 4;
         signed = TRUE;
     when '11'
         memop = MemOp_PREFETCH;
 
 offset = SignExtend(imm19:'00', 64);
 boolean tag_checked = FALSE;
 
 bits(64) address = PC[] + offset;
 bits(size*8) data;
 
 if HaveMTEExt() then
     SetTagCheckedInstruction(tag_checked);
 
 case memop of
     when MemOp_LOAD
         data = Mem[address, size, AccType_NORMAL];
         if signed then
             X[t] = SignExtend(data, 64);
         else
             X[t] = data;
 
     when MemOp_PREFETCH
         Prefetch(address, t<4:0>);
 

.SS Assembler Symbols

 <prfop>
  Encoded in Rt
  Is the prefetch operation, defined as <type><target><policy>.           <type>
  is one of:                                       PLDPrefetch for load, encoded
  in the "Rt<4:3>" field as 0b00.
  PLIPreload instructions, encoded in the "Rt<4:3>" field as 0b01.
  PSTPrefetch for store, encoded in the "Rt<4:3>" field as 0b10.
  <target> is one of:                                       L1Level 1 cache,
  encoded in the "Rt<2:1>" field as 0b00.
  L2Level 2 cache, encoded in the "Rt<2:1>" field as 0b01.
  L3Level 3 cache, encoded in the "Rt<2:1>" field as 0b10.
  <policy> is one of:                                       KEEPRetained or
  temporal prefetch, allocated in the cache normally. Encoded in the "Rt<0>"
  field as 0.                                         STRMStreaming or non-
  temporal prefetch, for data that is used only once. Encoded in the "Rt<0>"
  field as 1.                                   For more information on these
  prefetch operations, see Prefetch memory.           For other encodings of the
  "Rt" field, use <imm5>.

 <imm5>
  Encoded in Rt
  Is the prefetch operation encoding as an immediate, in the range 0 to 31,
  encoded in the "Rt" field.           This syntax is only for encodings that
  are not accessible using <prfop>.

 <label>
  Encoded in imm19
  Is the program label from which the data is to be loaded. Its offset from the
  address of this instruction, in the range +/-1MB, is encoded as "imm19" times
  4.



.SS Operation

 bits(64) address = PC[] + offset;
 bits(size*8) data;
 
 if HaveMTEExt() then
     SetTagCheckedInstruction(tag_checked);
 
 case memop of
     when MemOp_LOAD
         data = Mem[address, size, AccType_NORMAL];
         if signed then
             X[t] = SignExtend(data, 64);
         else
             X[t] = data;
 
     when MemOp_PREFETCH
         Prefetch(address, t<4:0>);

