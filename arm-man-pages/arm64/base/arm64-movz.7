.nh
.TH "MOVZ -- A64" "7" " "  "instruction" "general"
.SS MOVZ
 Move wide with zero

 Move wide with zero moves an optionally-shifted 16-bit immediate value to a
 register.



.SS Immediate packed into 16-bit value and 2-bit shift - A64 - imm18_packed
 
                                                                   
                                                                   
                                                                   
   31  29          23  21                               5         0
    |   |           |   |                               |         |
  |.|1 0|1 0 0 1 0 1|. .|. . . . . . . . . . . . . . . .|. . . . .|
  | |               |   |                               |
  | `-opc           |   `-imm16                         `-Rd
  `-sf              `-hw
  
  
 
.SS 32-bit(sf == 0 && hw == 0x)
 
 MOVZ  <Wd>, #<imm>{, LSL #<shift>}
.SS 64-bit(sf == 1)
 
 MOVZ  <Xd>, #<imm>{, LSL #<shift>}
 
 integer d = UInt(Rd);
 integer datasize = if sf == '1' then 64 else 32;
 bits(16) imm = imm16;
 integer pos;
 MoveWideOp opcode;
 
 case opc of
     when '00' opcode = MoveWideOp_N;
     when '10' opcode = MoveWideOp_Z;
     when '11' opcode = MoveWideOp_K;
     otherwise UNDEFINED;
 
 if sf == '0' && hw<1> == '1' then UNDEFINED;
 pos = UInt(hw:'0000');
 
 bits(datasize) result;
 
 if opcode == MoveWideOp_K then
     result = X[d];
 else
     result = Zeros();
 
 result<pos+15:pos> = imm;
 if opcode == MoveWideOp_N then
     result = NOT(result);
 X[d] = result;
 

.SS Assembler Symbols

 <Wd>
  Encoded in Rd
  Is the 32-bit name of the general-purpose destination register, encoded in the
  "Rd" field.

 <Xd>
  Encoded in Rd
  Is the 64-bit name of the general-purpose destination register, encoded in the
  "Rd" field.

 <imm>
  Encoded in imm16
  Is the 16-bit unsigned immediate, in the range 0 to 65535, encoded in the
  "imm16" field.

 <shift>
  Encoded in hw
  For the 32-bit variant: is the amount by which to shift the immediate left,
  either 0 (the default) or 16, encoded in the "hw" field as <shift>/16.

 <shift>
  Encoded in hw
  For the 64-bit variant: is the amount by which to shift the immediate left,
  either 0 (the default), 16, 32 or 48, encoded in the "hw" field as <shift>/16.



.SS Operation

 bits(datasize) result;
 
 if opcode == MoveWideOp_K then
     result = X[d];
 else
     result = Zeros();
 
 result<pos+15:pos> = imm;
 if opcode == MoveWideOp_N then
     result = NOT(result);
 X[d] = result;


.SS Operational Notes

 
 If PSTATE.DIT is 1: 
 
 The execution time of this instruction is independent of: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
 The response of this instruction to asynchronous exceptions does not vary based on: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
