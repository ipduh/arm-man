.nh
.TH "REV -- A64" "7" " "  "instruction" "general"
.SS REV
 Reverse Bytes

 Reverse Bytes reverses the byte order in a register.



.SS Integer - A64 - general
 
                                                                   
       29                                                          
     30 |                                                          
   31 | |              21        16      12  10         5         0
    | | |               |         |       |   |         |         |
  |.|1|0|1 1 0 1 0 1 1 0|0 0 0 0 0|0 0 0 0|1 x|. . . . .|. . . . .|
  |   |                 |         |       |   |         |
  |   `-S               `-opcode2 |       |   `-Rn      `-Rd
  `-sf                            |       `-opc
                                  `-opcode[5:2]
  
  
 
.SS 32-bit(sf == 0 && opc == 10)
 
 REV  <Wd>, <Wn>
.SS 64-bit(sf == 1 && opc == 11)
 
 REV  <Xd>, <Xn>
 
 integer d = UInt(Rd);
 integer n = UInt(Rn);
 
 integer datasize = if sf == '1' then 64 else 32;
 
 integer container_size;
 case opc of
     when '00'
         Unreachable();
     when '01'
         container_size = 16;
     when '10'
         container_size = 32;
     when '11'
         if sf == '0' then UNDEFINED;
         container_size = 64;
 
 bits(datasize) operand = X[n];
 bits(datasize) result;
 
 integer containers = datasize DIV container_size;
 integer elements_per_container = container_size DIV 8;
 integer index = 0;
 integer rev_index;
 for c = 0 to containers-1
     rev_index = index + ((elements_per_container - 1) * 8);
     for e = 0 to elements_per_container-1
         result<rev_index + 7:rev_index> = operand<index + 7:index>;
         index = index + 8;
         rev_index = rev_index - 8;
 
 X[d] = result;
 

.SS Assembler Symbols

 <Wd>
  Encoded in Rd
  Is the 32-bit name of the general-purpose destination register, encoded in the
  "Rd" field.

 <Wn>
  Encoded in Rn
  Is the 32-bit name of the general-purpose source register, encoded in the "Rn"
  field.

 <Xd>
  Encoded in Rd
  Is the 64-bit name of the general-purpose destination register, encoded in the
  "Rd" field.

 <Xn>
  Encoded in Rn
  Is the 64-bit name of the general-purpose source register, encoded in the "Rn"
  field.



.SS Operation

 bits(datasize) operand = X[n];
 bits(datasize) result;
 
 integer containers = datasize DIV container_size;
 integer elements_per_container = container_size DIV 8;
 integer index = 0;
 integer rev_index;
 for c = 0 to containers-1
     rev_index = index + ((elements_per_container - 1) * 8);
     for e = 0 to elements_per_container-1
         result<rev_index + 7:rev_index> = operand<index + 7:index>;
         index = index + 8;
         rev_index = rev_index - 8;
 
 X[d] = result;


.SS Operational Notes

 
 If PSTATE.DIT is 1: 
 
 The execution time of this instruction is independent of: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
 The response of this instruction to asynchronous exceptions does not vary based on: 
 The values of the data supplied in any of its registers.
 The values of the NZCV flags.
