.nh
.TH "UDIV -- A64" "7" " "  "instruction" "general"
.SS UDIV
 Unsigned Divide

 Unsigned Divide divides an unsigned integer register value by another unsigned
 integer register value, and writes the result to the destination register. The
 condition flags are not affected.



.SS Integer - A64 - general
 
                                                                   
       29                                                          
     30 |                                    10                    
   31 | |              21        16        11 |         5         0
    | | |               |         |         | |         |         |
  |.|0|0|1 1 0 1 0 1 1 0|. . . . .|0 0 0 0 1|0|. . . . .|. . . . .|
  | | |                 |         |         | |         |
  | | `-S               `-Rm      |         | `-Rn      `-Rd
  | `-op                          |         `-o1
  `-sf                            `-opcode2<5:1>
  
  
 
.SS 32-bit(sf == 0)
 
 UDIV  <Wd>, <Wn>, <Wm>
.SS 64-bit(sf == 1)
 
 UDIV  <Xd>, <Xn>, <Xm>
 
 integer d = UInt(Rd);
 integer n = UInt(Rn);
 integer m = UInt(Rm);
 integer datasize = if sf == '1' then 64 else 32;
 boolean unsigned = (o1 == '0');
 
 bits(datasize) operand1 = X[n];
 bits(datasize) operand2 = X[m];
 integer result;
 
 if IsZero(operand2) then
     result = 0;
 else
     result = RoundTowardsZero(Real(Int(operand1, unsigned)) / Real(Int(operand2, unsigned)));
 
 X[d] = result<datasize-1:0>;
 

.SS Assembler Symbols

 <Wd>
  Encoded in Rd
  Is the 32-bit name of the general-purpose destination register, encoded in the
  "Rd" field.

 <Wn>
  Encoded in Rn
  Is the 32-bit name of the first general-purpose source register, encoded in
  the "Rn" field.

 <Wm>
  Encoded in Rm
  Is the 32-bit name of the second general-purpose source register, encoded in
  the "Rm" field.

 <Xd>
  Encoded in Rd
  Is the 64-bit name of the general-purpose destination register, encoded in the
  "Rd" field.

 <Xn>
  Encoded in Rn
  Is the 64-bit name of the first general-purpose source register, encoded in
  the "Rn" field.

 <Xm>
  Encoded in Rm
  Is the 64-bit name of the second general-purpose source register, encoded in
  the "Rm" field.



.SS Operation

 bits(datasize) operand1 = X[n];
 bits(datasize) operand2 = X[m];
 integer result;
 
 if IsZero(operand2) then
     result = 0;
 else
     result = RoundTowardsZero(Real(Int(operand1, unsigned)) / Real(Int(operand2, unsigned)));
 
 X[d] = result<datasize-1:0>;

