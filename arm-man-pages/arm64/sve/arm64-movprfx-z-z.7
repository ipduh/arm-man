.nh
.TH "MOVPRFX (unpredicated)" "7" " "  "instruction" "sve"
.SS MOVPRFX (unpredicated)
 Move prefix (unpredicated)

 The unpredicated MOVPRFX instruction is a hint to hardware that the instruction
 may be combined with the destructive instruction which follows it in program
 order to create a single constructive operation. Since it is a hint it is also
 permitted to be implemented as a discrete vector copy, and the result of
 executing the pair of instructions with or without combining is identical. The
 choice of combined versus discrete operation may vary dynamically.



 Although the operation of the instruction is defined as a simple unpredicated
 vector copy, it is required that the prefixed instruction at PC+4 must be an
 SVE destructive binary or ternary instruction encoding, or a unary operation
 with merging predication, but excluding other MOVPRFX instructions. The
 prefixed instruction must specify the same destination vector as the MOVPRFX
 instruction. The prefixed instruction must not use the destination register in
 any other operand position, even if they have different names but refer to the
 same architectural register state. Any other use is UNPREDICTABLE.

 Status : Green

 Predicated : False

 takes_pred_movprfx : False



.SS SVE - A64 - movprfx_z_z_
 
                       21                                          
                     22 |                                          
                   23 | |        16                                
                 24 | | |      17 |          10         5         0
                  | | | |       | |           |         |         |
   0 0 0 0 0 1 0 0|0|0|1|0 0 0 0|0|1 0 1 1 1 1|. . . . .|. . . . .|
                  | |   |       |             |         |
                  | |   |       `-opc2<0>     `-Zn      `-Zd
                  | |   `-opc2<4:1>
                  | `-opc<0>
                  `-opc<1>
  
  
 
.SS SVE
 
 MOVPRFX <Zd>, <Zn>
 
 if !HaveSVE() then UNDEFINED;
 integer n = UInt(Zn);
 integer d = UInt(Zd);
 
 CheckSVEEnabled();
 bits(VL) result = Z[n];
 Z[d] = result;
 

.SS Assembler Symbols

 <Zd>
  Encoded in Zd
  Is the name of the destination scalable vector register, encoded in the "Zd"
  field.

 <Zn>
  Encoded in Zn
  Is the name of the source scalable vector register, encoded in the "Zn" field.



.SS Operation

 CheckSVEEnabled();
 bits(VL) result = Z[n];
 Z[d] = result;

