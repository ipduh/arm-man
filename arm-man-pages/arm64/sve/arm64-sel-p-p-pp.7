.nh
.TH "SEL (predicates)" "7" " "  "instruction" "sve"
.SS SEL (predicates)
 Conditionally select elements from two predicates

 Read active elements from the first source predicate and inactive elements from
 the second source predicate and place in the corresponding elements of the
 destination predicate. Does not set the condition flags.

 Status : Green

 Predicated : True

 takes_pred_movprfx : False



.SS SVE - A64 - sel_p_p_pp_
 
                                                                   
                     22                                            
                   23 |                                            
                 24 | |  20      16  14      10 9       5 4       0
                  | | |   |       |   |       | |       | |       |
   0 0 1 0 0 1 0 1|0|0|0 0|. . . .|0 1|. . . .|1|. . . .|1|. . . .|
                  | |     |           |       | |       | |
                  | `-S   `-Pm        `-Pg    | `-Pn    | `-Pd
                  `-op                        `-o2      `-o3
  
  
 
.SS SVE
 
 SEL     <Pd>.B, <Pg>, <Pn>.B, <Pm>.B
 
 if !HaveSVE() then UNDEFINED;
 integer esize = 8;
 integer g = UInt(Pg);
 integer n = UInt(Pn);
 integer m = UInt(Pm);
 integer d = UInt(Pd);
 
 CheckSVEEnabled();
 integer elements = VL DIV esize;
 bits(PL) mask = P[g];
 bits(PL) operand1 = P[n];
 bits(PL) operand2 = P[m];
 bits(PL) result;
 
 for e = 0 to elements-1
     bit element1 = ElemP[operand1, e, esize];
     bit element2 = ElemP[operand2, e, esize];
     if ElemP[mask, e, esize] == '1' then
         ElemP[result, e, esize] = element1;
     else
         ElemP[result, e, esize] = element2;
 
 P[d] = result;
 

.SS Assembler Symbols

 <Pd>
  Encoded in Pd
  Is the name of the destination scalable predicate register, encoded in the
  "Pd" field.

 <Pg>
  Encoded in Pg
  Is the name of the governing scalable predicate register, encoded in the "Pg"
  field.

 <Pn>
  Encoded in Pn
  Is the name of the first source scalable predicate register, encoded in the
  "Pn" field.

 <Pm>
  Encoded in Pm
  Is the name of the second source scalable predicate register, encoded in the
  "Pm" field.



.SS Operation

 CheckSVEEnabled();
 integer elements = VL DIV esize;
 bits(PL) mask = P[g];
 bits(PL) operand1 = P[n];
 bits(PL) operand2 = P[m];
 bits(PL) result;
 
 for e = 0 to elements-1
     bit element1 = ElemP[operand1, e, esize];
     bit element2 = ElemP[operand2, e, esize];
     if ElemP[mask, e, esize] == '1' then
         ElemP[result, e, esize] = element1;
     else
         ElemP[result, e, esize] = element2;
 
 P[d] = result;

