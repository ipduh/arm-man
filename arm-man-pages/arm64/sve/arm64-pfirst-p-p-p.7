.nh
.TH "PFIRST" "7" " "  "instruction" "sve"
.SS PFIRST
 Set the first active predicate element to true

 Sets the first active element in the destination predicate to true, otherwise
 elements from the source predicate are passed through unchanged. Sets the First
 (N), None (Z), !Last (C) condition flags based on the predicate result, and the
 V flag to zero.

 Status : Green

 Predicated : True

 takes_pred_movprfx : False



.SS SVE - A64 - pfirst_p_p_p_
 
                                                                   
                     22                                            
                   23 |                                            
                 24 | |                      10 9       5 4       0
                  | | |                       | |       | |       |
   0 0 1 0 0 1 0 1|0|1|0 1 1 0 0 0 1 1 0 0 0 0|0|. . . .|0|. . . .|
                  | |                           |         |
                  | `-S                         `-Pg      `-Pdn
                  `-op
  
  
 
.SS SVE
 
 PFIRST  <Pdn>.B, <Pg>, <Pdn>.B
 
 if !HaveSVE() then UNDEFINED;
 integer esize = 8;
 integer g = UInt(Pg);
 integer dn = UInt(Pdn);
 
 CheckSVEEnabled();
 integer elements = VL DIV esize;
 bits(PL) mask = P[g];
 bits(PL) result = P[dn];
 integer first = -1;
 
 for e = 0 to elements-1
     if ElemP[mask, e, esize] == '1' && first == -1 then
         first = e;
 
 if first >= 0 then
     ElemP[result, first, esize] = '1';
 
 PSTATE.<N,Z,C,V> = PredTest(mask, result, esize);
 P[dn] = result;
 

.SS Assembler Symbols

 <Pdn>
  Encoded in Pdn
  Is the name of the source and destination scalable predicate register, encoded
  in the "Pdn" field.

 <Pg>
  Encoded in Pg
  Is the name of the governing scalable predicate register, encoded in the "Pg"
  field.



.SS Operation

 CheckSVEEnabled();
 integer elements = VL DIV esize;
 bits(PL) mask = P[g];
 bits(PL) result = P[dn];
 integer first = -1;
 
 for e = 0 to elements-1
     if ElemP[mask, e, esize] == '1' && first == -1 then
         first = e;
 
 if first >= 0 then
     ElemP[result, first, esize] = '1';
 
 PSTATE.<N,Z,C,V> = PredTest(mask, result, esize);
 P[dn] = result;

